name: Deploy infrastructure
run-name: Deploy infrastructure for ${{ inputs.environment }}

on:
  workflow_call:
    inputs:
      environment:
        description: Deployment environment
        required: true
        type: string
      git_ref_to_deploy:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment environment
        required: true
        type: string
      git_ref_to_deploy:
        description: The git commit SHA to deploy.
        required: false
        type: string

permissions: {}

env:
  environment: ${{ inputs.environment }}
  image_tag: ${{ inputs.image_tag || github.sha }}
  git_ref: ${{ inputs.git_ref_to_deploy || github.ref_name }}
  aws_role: ${{ inputs.environment == 'production'
    && 'arn:aws:iam::820242920762:role/GithubDeployMavisAndInfrastructure'
    || 'arn:aws:iam::393416225559:role/GithubDeployMavisAndInfrastructure' }}

concurrency:
  group: deploy-infrastructure-${{ inputs.environment }}

defaults:
  run:
    working-directory: terraform/app

jobs:
  validate-permissions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref_name }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::${{ env.account_id }}:role/GithubDeployMavisAndInfrastructure
          aws-region: eu-west-2
      - name: Compare permissions
        id: compare-permissions
        run: |
          source ./scripts/validate-github-actions-policy.sh
          validate_policies "arn:aws:iam::$account_id:policy/DeployMavisResources" ./account/resources/iam_policy_DeployMavisResources.json
          exit $?
  update-permissions:
    runs-on: ubuntu-latest
    needs: validate-permissions
    if: ${{ (inputs.environment == 'production' || inputs.environment == 'preview') && needs.validate-permissions.result == 'failure' }}
    environment: ${{ inputs.environment }}
    defaults:
      run:
        working-directory: ./terraform
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref_name }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::${{ env.account_id }}:role/GithubDeployMavisAndInfrastructure
          aws-region: eu-west-2
      - name: Update IAM policy
        run: ./scripts/update-github-actions-policy.sh "arn:aws:iam::$account_id:policy/DeployMavisResources" ./account/resources/iam_policy_DeployMavisResources.json
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: [validate-permissions, update-permissions]
    if: ${{ !cancelled() &&
      ((inputs.environment != 'production' && inputs.environment != 'preview') ||
      needs.validate-permissions.result == 'success' || needs.update-permissions.result == 'success') }}
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ env.git_ref }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ env.aws_role }}
          aws-region: eu-west-2
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
      - name: Check if any deployments are running
        run: ../scripts/check-for-running-deployments.sh $environment
      - name: Terraform Plan
        id: plan
        run: |
          set -e
          terraform init -backend-config="env/$environment-backend.hcl" -upgrade
          terraform plan \
          -var-file="env/$environment.tfvars" \
          -out ${{ runner.temp }}/tfplan | tee ${{ runner.temp }}/tf_stdout
          TF_EXIT_CODE=${PIPESTATUS[0]}
          cat ${{ runner.temp }}/tf_stdout
          if [ $TF_EXIT_CODE -eq 1 ]; then
              exit $TF_EXIT_CODE
          fi
          ../scripts/validate_plan.sh ${{ runner.temp }}/tf_stdout
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan_infrastructure-${{ inputs.environment }}
          path: ${{ runner.temp }}/tfplan

  apply:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ inputs.environment }}
    if: ${{ !cancelled() }}
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ env.git_ref }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ env.aws_role }}
          aws-region: eu-west-2
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: tfplan_infrastructure-${{ inputs.environment }}
          path: ${{ runner.temp }}
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3
      - name: Apply the changes
        run: |
          set -e
          terraform init -backend-config="env/$environment-backend.hcl" -upgrade
          terraform apply ${{ runner.temp }}/tfplan
