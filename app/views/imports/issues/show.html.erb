<% content_for :before_main do %>
  <%= render AppBreadcrumbComponent.new(items: [
                                          { text: t("dashboard.index.title"), href: dashboard_path },
                                          { text: t("imports.index.title"), href: imports_path },
                                          { text: "Import issues", href: imports_issues_path },
                                        ]) %>
<% end %>

<% title = "Uploaded #{@type} record duplicates #{@existing_or_deleted.with_indefinite_article} record" %>

<span class="nhsuk-caption-l"><%= @patient.full_name %></span>
<%= h1 title, page_title: "#{@patient.full_name} â€“ #{title}" %>

<div class="nhsuk-grid-row">
  <div class="nhsuk-grid-column-one-half">
    <%= render AppCardComponent.new(heading_level: 2, colour: "blue") do |c| %>
      <% c.with_heading { "Uploaded record" } %>
      <% if @type == "child" %>
        <%= render AppChildSummaryComponent.new(@patient.with_pending_changes) %>
      <% else %>
        <%= render AppVaccinationRecordSummaryComponent.new(
              @vaccination_record.with_pending_changes, current_user:,
            ) %>
      <% end %>
    <% end %>
  </div>

  <div class="nhsuk-grid-column-one-half">
    <%= render AppCardComponent.new(heading_level: 2, colour: "blue") do |c| %>
      <% c.with_heading { "#{@existing_or_deleted.capitalize} record" } %>
      <% if @type == "child" %>
        <%= render AppChildSummaryComponent.new(@patient.with_pending_changes) %>
      <% else %>
        <%= render AppVaccinationRecordSummaryComponent.new(
              @vaccination_record, current_user:,
            ) %>
      <% end %>
    <% end %>
  </div>
</div>

<%= form_with(
      model: @form,
      url: imports_issue_path(@record, type: params[:type]),
      method: :patch,
      class: "nhsuk-u-width-one-half",
    ) do |f| %>
  <% content_for(:before_content) { f.govuk_error_summary } %>

  <%= f.govuk_collection_radio_buttons :apply_changes,
                                       @form.apply_changes_options,
                                       :itself,
                                       ->(option) { I18n.t(option, scope: "import_duplicate_form.options.label.#{@existing_or_deleted}", type: @type) },
                                       ->(option) { I18n.t(option, scope: "import_duplicate_form.options.hint.#{@existing_or_deleted}") },
                                       bold_labels: false,
                                       small: true %>

  <%= f.govuk_submit "Resolve duplicate" %>
<% end %>
